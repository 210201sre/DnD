DROP SCHEMA IF EXISTS dnd CASCADE;

CREATE SCHEMA dnd;

DROP TYPE IF EXISTS dnd.role CASCADE;
CREATE TYPE dnd.role AS ENUM ('ADMIN', 'MODERATOR', 'PLAYER');

DROP TYPE IF EXISTS dnd.alignment CASCADE;
CREATE TYPE dnd.alignment as ENUM('LAWFULGOOD', 'NEUTRALGOOD', 'CHAOTICGOOD', 'LAWFULNEUTRAL', 'NEUTRAL', 'CHAOTICNEUTRAL', 'LAWFULEVIL', 'NEUTRALEVIL', 'CHAOTICEVIL');

DROP TYPE IF EXISTS dnd.class CASCADE;
CREATE TYPE dnd.class as ENUM('CLERIC', 'FIGHTER', 'ROUGE', 'WIZARD');

DROP TYPE IF EXISTS dnd.language CASCADE;
CREATE TYPE dnd.language as ENUM('COMMON', 'DWARVISH', 'ELVISH', 'GIANT', 'GNOMISH', 'GOBLIN', 'HALFING', 'ORC', 'ABYSSAL', 'CELESTIAL', 'DEEPSPEECH', 'DRACONIC', 'INFERNAL', 'PRIMORDIAL', 'SYLVAN', 'UNDERCOMMON');

DROP TYPE IF EXISTS dnd.race CASCADE;
CREATE TYPE dnd.race as ENUM('HILLD_WARF', 'MOUNTAIN_DWARF', 'HIGH_ELF', 'WOOD_ELF', 'LIGHTFOOT_HALFING', 'STOUT_HALFING', 'HUMAN');

DROP TYPE IF EXISTS dnd.size CASCADE;
CREATE TYPE dnd.size as ENUM('SMALL', 'MEDIUM', 'LARGE');

DROP TYPE IF EXISTS dnd.gender CASCADE;
CREATE TYPE dnd.gender as ENUM('MALE', 'FEMALE', 'NONBINARY', 'NONE');

DROP TYPE IF EXISTS dnd.magic CASCADE;
CREATE TYPE dnd.magic as ENUM('NOTIMPLEMENTEDYET');

DROP TYPE IF EXISTS dnd.skill CASCADE;
CREATE TYPE dnd.skill as ENUM('NOTIMPLEMENTEDYET');

DROP TABLE IF EXISTS dnd.users CASCADE;
CREATE TABLE dnd.users(
	id SERIAL PRIMARY KEY,
	username VARCHAR(20) UNIQUE NOT NULL,
	email VARCHAR(20) UNIQUE NOT NULL,
	password VARCHAR(20) NOT NULL,
	role VARCHAR(20) NOT NULL
);

DROP TABLE IF EXISTS dnd.dungeon_masters CASCADE;
CREATE TABLE dnd.dungeon_masters(
	id SERIAL PRIMARY KEY,
	owner_id INTEGER NOT NULL REFERENCES dnd.users(id) ON DELETE CASCADE,
	ranking REAL NOT NULL DEFAULT 0
	
);

DROP TABLE IF EXISTS dnd.friends CASCADE;
CREATE TABLE dnd.friends(
	main_id INTEGER NOT NULL REFERENCES dnd.users(id) ON DELETE CASCADE,
	friend_id INTEGER NOT NULL REFERENCES dnd.users(id) ON DELETE CASCADE,
	PRIMARY KEY(main_id, friend_id)
);

DROP TABLE IF EXISTS dnd.rankings CASCADE;
CREATE TABLE dnd.rankings(
	ranked_id INTEGER NOT NULL REFERENCES dnd.dungeon_masters(id) ON DELETE CASCADE,
	rank SMALLINT NOT NULL CHECK (rank > 0 AND rank < 6),
	ranker_id INTEGER NOT NULL REFERENCES dnd.users(id) ON DELETE CASCADE
	
);

DROP TABLE IF EXISTS dnd.dnd_characters CASCADE;
CREATE TABLE dnd.dnd_characters(
	id SERIAL PRIMARY KEY,
	owner_id INTEGER NOT NULL REFERENCES dnd.users(id) ON DELETE CASCADE,
	gender VARCHAR(20) NOT NULL,
	race VARCHAR(20) NOT NULL,
	main_class VARCHAR(20) NOT NULL,
	level SMALLINT NOT NULL CHECK (level <=20 AND level > 0) DEFAULT 1,
	exp INTEGER NOT NULL CHECK (exp >= 0) DEFAULT 0,
	hp SMALLINT NOT NULL CHECK (hp > 0),
	age SMALLINT NOT NULL CHECK (age > 0),
	height SMALLINT NOT NULL CHECK (height > 0),
	weight SMALLINT NOT NULL CHECK (weight > 0),
	alignment VARCHAR(20) NOT NULL,
	size VARCHAR(20) NOT NULL,
	speed SMALLINT NOT NULL CHECK (speed > 0)
);

DROP TABLE IF EXISTS dnd.language_known CASCADE;
CREATE TABLE dnd.language_known(
	character_id INTEGER NOT NULL REFERENCES dnd.dnd_characters(id) ON DELETE CASCADE,
	language dnd.language
);

-- First Admin User

INSERT INTO dnd.users (username, email, password, role) VALUES ('admin', 'admin@admin.com', 'password','ADMIN');
INSERT INTO dnd.dungeon_masters (owner_id, 0) VALUES (1, 0);